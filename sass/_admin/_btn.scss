@charset "UTF-8";

$btn-radius: 5px;
$btn-color: #fff;
$btn-font-size: if($index, 24px, 16px);
$btn-pdy: pdy(if($index, 48px, 34px), $btn-font-size, $input-line-height);

//
// button, hover
// ----------------------------------------------

// # button

input.btn {
    border: none;
}

.btn {
    // default
    @include btn {
        --bg: dark(color(muted), 26);
        --color: rgba(#fff, .7);
    }

    // theme
    background-color: var(--bg, #{ if($index, dark(color(success), 20), color(secondary)) });
    border-radius: if($btn-radius, $btn-radius, null);
    padding: $btn-pdy $btn-pdy*1.3;
    transition: $transition-duration;

    color: var(--color, #{$btn-color});
    font-size: $btn-font-size;
    line-height: $line-height-base;
    letter-spacing: .06em;

    &:hover, &:active, &:focus {
        --bg: #{light(color(), 10)};
        --color: #{$btn-color};
        box-shadow: 0 0 0 4px rgba(#000, .1);
    }

    @if not $index {
        // btn theme
        @each $theme, $color in (
            success:   color(success),
            info:      color(info),
            warning:   color(warning),
            danger:    color(danger),
        ) {
            &.#{$theme} {
                --bg: #{a11y($color, $btn-color)};
                // --color: #{a11y($btn-color, $color)};

                &:hover {
                    --bg: #{a11y(light($color, 12), $btn-color)};
                }

                &.outline {
                    --color: #{a11y($color, $btn-color)};
                    border-color: $color;

                    &:hover, &:active {
                        --color: #fff;
                    }
                }
            }
        }
        &.cancel {
            --bg: #{dark(color(muted), 20)};
            --color: #{a11y(#fff, dark(color(muted), 20))};

            &:hover {
                --bg: #{dark(color(muted), 30)};
            }
        }
        &.outline {
            --bg: #{$btn-color};
            --color: #{color()};
            border: 1px solid light(color(), 15);
        }
    }
}

//
// button group
// ----------------------------------------------
// src: pure css => flex
@if not $index {
    .btn-group {
        position: relative;
        display: inline-flex;
        vertical-align: middle;

        > .btn {
            position: relative;
            flex: 1 1 auto;

            &:not(:last-child) {
                border-right: 1px solid rgba(#000, .1);
            }

            @if $btn-radius {
                &:not(:first-child) {
                    border-top-left-radius: 0;
                    border-bottom-left-radius: 0;
                }
                &:not(:last-child) {
                    border-top-right-radius: 0;
                    border-bottom-right-radius: 0;
                }
            }
        }
    }
}


// # hover effect

// reset default value
// button[class*="hover:"] {
//     padding: 0;
//     text-align: inherit;
// }

// [class*="hover:"] {
//     transition: 0.2s;
// }

// .hover\:text {
//     @each $state, $value in (
//         'primary':   color(),
//         'info':      color(info),
//         'danger':    color(danger),
//         'warning':   a11y(color(warning), #fff)
//     ) {
//         &-#{$state}:hover {
//             --color: #{ dark($value, 15) };
//         }
//     }
// }