@use 'sass:map';

// $breakpoints in variables

// == media 2022
// -----------------------------------------------------------------
//
// @include mq(sm) => 768px
// $orientation: landscape,portrait
// $max: em(get(xs, $breakpoints)) - .01;
// $orientation: landscape => all and (orientation: landscape) 限橫向方向
// $plus: ' and (min-height: #{em(600)})' => and (min-height: 37.5em)
// $plus: ', (max-width: #{em(get(md, $breakpoints)) - .01})' => , (max-width: 29.99em)

// 針對放大比例設定 min-resolution
// 預設 100%   => 96 dpi, > 100%  => (min-resolution: 97dpi)
// 放大到 125% => 96*1.25 = 120dpi
// 放大到 200% => 96*2 = 192 dpi
// 'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',
// 'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)',

@mixin mq($min: 0, $max: 0, $plus: false, $orientation: false) {
    $query: '';

    // 處理特殊媒體查詢條件
    @if $min == retina2x {
        $query: '#{$query} and (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)';
    } @else {
        $min: if( type-of($min) == number, em($min), em(map.get($breakpoints, $min)) );
        $max: if( type-of($max) == number, em($max), em(map.get($breakpoints, $max)) - .01 );

        @if $min > 0     { $query: '#{$query} and (min-width: #{$min})'; }
        @if $max > 0     { $query: '#{$query} and (max-width: #{$max})'; }
        @if $orientation { $query: '#{$query} and (orientation: #{$orientation})'; }
        @if $plus        { $query: '#{$query}#{$plus}'; }
    }

    // Remove unnecessary media query prefix 'all and '
    @if ($query != '') {
        $query: str-slice(unquote($query), 6);
    }

    @media #{$query} {
        @content;
    }
}

@mixin mq-max($value, $plus: false, $orientation: false) {
    @include mq($max: $value, $plus: $plus, $orientation: $orientation) {
        @content;
    };
}