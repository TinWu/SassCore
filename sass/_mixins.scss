@charset "UTF-8";

@import "mixins/mq";
@import "mixins/grid";


// == 壓縮 mixin - 壓縮合併樣式(佔位符%)
// -----------------------------------------------------------------
// https://gist.github.com/hc2p/5c091269e5cb902770e2
// @include static(clearfix, flase)

$placeholders-selectors: () !default;

@mixin static($name, $ex: true) {
    $selector: map-get($placeholders-selectors, $name);

    @if $ex == true {
        @if $selector == null {
            $selector: unique-id();
            $placeholders-selectors: map-merge($placeholders-selectors, ($name: $selector)) !global;

            @at-root %#{$selector} {
                @include static($name, false) {
                    @content;
                }
            }
        }
        @at-root (without: media) {
            @extend %#{$selector};
        }
    }
    @else {
        @content;
    }
}

// == 插入偽類
// -----------------------------------------------------------------
// 用法:
// 1 @include el => div:before, div:after { content:""; display:block; }
// 2 @include el(before, '111', false) => div:before { content:"111"; }
// $ex: false 時，不會將程式壓縮起來 (@include static)
//
@mixin el($insert: all, $display: block, $content: '', $ex: true) {
    $selector: if($insert == 'all', '&::before,&::after', '&::#{$insert}');

    #{$selector} {
        @if $display == block and $content == '' {
            // 相同的壓縮起來
            @include static(insert, $ex) {
                content: '';
                display: block;
            }
        } @else {
            @if $content { content: $content; }
            @if $display { display: $display; }
        }

        @content;
    }
}

// == 清除浮動
// -----------------------------------------------------------------
@mixin clearfix($ex: true) {
    @include static(clearfix, $ex) {
        &::after {
            display: table;
            content: '';
            clear: both;
        }
    }
}

// == 文字類
// -----------------------------------------------------------------

// 隱藏文字
@mixin text-hide($padding:0, $ex:true) {
    @include static(texthide, $ex) {
        text-indent: 101%;
        overflow: hidden;
        white-space: nowrap;
    }
    padding: if($padding, $padding, null); // for firefox => 有時候會跟padding衝突
}

// 文字溢位出現省略號,要設寬度
@mixin text-ellipsis($width:100%, $ex:true) {
    @include static('text-ellipsis', $ex) {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
    width: if($width, $width, null);
}

// 底色太淺就自動設文字色(符合對比度)
@mixin a11y($fg, $bg, $radio: 4.5) {
    @if contrast-ratio($fg, $bg) < $radio {
        color: a11y($fg, $bg);
    }
}

// == 置中
// -----------------------------------------------------------------
// 用法:
// 水平-@include center(x) => transform: translateX(-50%);
// 垂直-@include center(y) => transform: translateY(-50%);
//
// @include center(500px) => margin-left: -250px
// @include center(null, 300px) => margin-top: -150px

@mixin center($main: null, $cross: null) {
    position: absolute;

    // 預設置中
    @if $main == null and $cross == null {
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }

    // 垂直置中
   @if $main == y {
       top: 50%;
       transform: translateY(-50%);
   }

   // 水平置中
   @else if $main != null {
       left: 50%;
       @if type-of($main) == number {
           width: $main;
           margin-left: -(round($main * 0.5));
       } @else {
           transform: translateX(-50%);
       }
   }

    // 垂直置中(數字)
    @if type-of($cross) == number {
        top: 50%;
        height: $cross;
        margin-top: -(round($cross * 0.5));
    }
}

// == 按鈕
// -----------------------------------------------------------------
@mixin btn($ex: true) {
    @include static(btn, $ex) {
        // common
        display: inline-block;
        text-align: center;
        vertical-align: middle;
        user-select: none;
        -webkit-appearance: none;

        &:focus {
            outline: 0;
        }
    }

    // &:disabled <a> 不可用 => 改 &[disabled]
    &[disabled] {
        cursor: default;

        @content;
    }
}

// == 動畫
// -----------------------------------------------------------------
@mixin keyframes($name) {
    @each $pre in (webkit, moz) { // webkit, moz, ms, o
        @-#{$pre}-keyframes #{$name} { @content; }
    }
    @keyframes #{$name} { @content; }
}

// 使用方法
// @include animate(fadein 1s 1 forwards) {
//   0%   { opacity: 0; }
//   100% { opacity: 1; }
// }
// 名稱 動畫時間 動畫方式 延遲時間 次數 方向 結束狀態 啟動停止
// animation: name duration timing-function delay iteration-count direction fill-mode play-state;
// animation: example 5s linear 2s infinite alternate;
// animation: mymove 5s infinite;
@mixin animate($animate) {
    animation: $animate;

    @include keyframes(nth($animate, 1)) {
        @content;
    }
}

// == 跨瀏覽器
// -----------------------------------------------------------------
// 用法：@include prefix((writing-mode: vertical-rl), ms webkit o);
@mixin prefix($map, $vendors: ms webkit moz o) {
    @each $prop, $value in $map {
        @if $vendors {
            @each $vendor in $vendors {
                #{"-" + $vendor + "-" + $prop}: #{$value};
            }
        }
        // Dump regular property anyway
        #{$prop}: #{$value};
    }
}

// == 三角形
// -----------------------------------------------------------------
@mixin triangle($direction, $width, $height, $color: currentcolor) {
    border: solid transparent;
    width: 0;
    height: 0;

    @if $direction == top {
        border-width: 0 ($width*0.5) $height ($width*0.5);
        border-bottom-color: $color;
    }
    @if $direction == bottom{
        border-width: $height ($width*0.5) 0 ($width*0.5);
        border-top-color: $color;
    }
    @if $direction == left{
        border-width: ($height*0.5) $width ($height*0.5) 0;
        border-right-color: $color;
    }
    @if $direction == right{
        border-width: ($height*0.5) 0 ($height*0.5) $width;
        border-left-color: $color;
    }
}

// == 用map產生cass https://gist.github.com/sarahdayan/4d2cc04a636e8039f10a889a0e29fbd9
// -----------------------------------------------------------------
//
// $spacing-map: (
//   '0': (0),
//   'half': (4px),
//   '1': (8px),
//   '2': (16px),
// );
// .p-x {
//     @include modifiers(
//         $map: $spacing-map,
//         $attribute: ('padding-left', 'padding-right'),
//         $prefix: '--'
//     );
// }
//
@mixin modifiers($map, $attribute, $prefix: '-', $separator: '-', $base: 'base') {
    @each $key, $value in $map {
        &#{if($key != $base, #{$prefix}#{$key}, '')} {
            @if type-of($value) == 'map' {
                @include modifiers($value, $attribute, $separator);
            }
            @else if type-of($attribute) == 'list' {
                @each $a in $attribute {
                    #{$a}: $value;
                }
            }
            @else {
                #{$attribute}: if($value, $value, $key);
            }
        }
    }
}

