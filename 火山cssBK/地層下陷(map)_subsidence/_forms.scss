@charset "UTF-8";

// == Forms
// -----------------------------------------------------------------

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

legend {
    color: inherit;
    display: block;
    width: 100%;
    margin-bottom: .3em;
    padding: .3em 0;
}

.appearance-none {
    @include static(appearance) {
        // 元素外觀屬性: 移除預設樣式
        appearance: none;

        // Unstyle the caret on `<select>`s in IE10+.
        &::-ms-expand {
            background-color: transparent;
            border: 0;
            display: none; // for IE11
        }
    }
}

#{$input-name} {
    @if $shadow {
        --shadow: #{$shadow};
        box-shadow: var(--shadow);
    }

    @if $input-bg {
        background-color: $input-bg;
        background-clip: padding-box;
    }
    border-radius: if($input-radius, $input-radius, 0);
    border: if($input-border-width, $input-border, null);
    transition: if($input-transition, $input-transition, null);
    vertical-align: middle;
    // height: $input-height;

    color: if($input-color, $input-color, null);
    font-size: if($input-font-size != $font-size-base, torem($input-font-size), null);
    line-height: if($input-line-height != $line-height-base, $input-line-height, null);

    $pdy: pdy($input-height, $input-line-height);
    @if $input-space {
        padding: $pdy torem($input-space);
    }
    @else {
        padding-top: $pdy;
        padding-bottom: $pdy;
    }

    @include static(appearance);

    @include static(infocus) {
        &:focus {
            --ring-offset-width: #{$ring-offset-width};
            --ring-color: #{$ring-color};
            --ring-shadow: 0 0 0 var(--ring-offset-width) var(--ring-color);

            border-color: $component-active;
            box-shadow: if($shadow, (var(--ring-shadow), var(--shadow)), var(--ring-shadow));
            outline: 0;

            // 錯誤輸入
            &:invalid {
                --border-color: #{color(danger)};
                --ring-color: #{rgba(color(danger), 0.3)};
            }
        }
    }

    &::placeholder, // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    &:disabled,     // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    &[readonly] {
        opacity: 1;
    }

    &:disabled,
    &[readonly] {
        background-color: if($input-disabled-bg, $input-disabled-bg, null);
    }

    &::placeholder {
        color: if($input-placeholder-color, $input-placeholder-color, null);
    }

    @include mq-max(sm) {
        width: 100%;
    }

    // form-stacked => input width full
    .form-stacked & {
        width: 100%;

        &.inline {
            @include static(forminline) {
                display: inline;
                width: auto;

                &:not(:last-child) {
                    margin-right: em($gutter)*0.3;
                }
            }
        }
    }

    .form-inline & {
        @include static(forminline);
    }
}

select#{$input-name} {
    // custom caret
    --select-caret: #{escape-svg($select-caret)};
    background: $input-bg var(--select-caret) no-repeat $select-seat-size;
    // background-image: var(--select-caret);
    // background-position: right center;
    // background-size: 16px 10px;
    // background-repeat: no-repeat;
    padding-right: 1.1em;

    &[size],
    &[multiple] {
        height: auto;
    }
    // IE, Edge src:https://github.com/twbs/bootstrap/issues/19398.
    &:focus::-ms-value {
        background-color: if($input-bg, $input-bg, null);
        color: if($input-color, $input-color, null);
    }
}

textarea#{$input-name} {
    height: auto;
}

// .label {
//     margin-top: $label-my;
//     margin-bottom: $label-my;

//     @if $input-line-height != $line-height-base {
//         line-height: $input-line-height;
//     }
//     @if $input-font-size != $font-size-base {
//         font-size: em($input-font-size);
//     }
// }

.input-group {
    display: flex;

    #{$input-name} {
        flex: 1 1 auto;
        width: 1%;
        height: auto;

        @include static(inputgroup) {
            &:focus {
                z-index: 1;
            }
            &:not(:last-child) {
                @if $input-radius {
                    border-top-right-radius: 0;
                    border-bottom-right-radius: 0;
                }
            }
            &:not(:first-child) {
                @if $input-radius {
                    border-top-left-radius: 0;
                    border-bottom-left-radius: 0;
                }

                margin-left: -$input-border-width;
            }
        }
    }

    select#{$input-name} {
        width: auto;
    }
}

.input-group-addon {
    background-color: if($input-bg, $input-bg, null);
    color: if($input-color, $input-color, null);

    @include static(inputgroup);

    @include static(inputgroup-addon) {
        border: if($input-border, $input-border, null);
        border-radius: if($input-radius, $input-radius, null);

        font-size: if($input-font-size != $font-size-base, torem($input-font-size), null);
        line-height: if($input-line-height != $line-height-base, $input-line-height, null);
        @if $input-space {
            padding: pdy($input-height, $input-line-height) torem($input-space);
        }
        white-space: nowrap;
    }
}

.input-group-btn {
    transition: $transition-duration*2;

    @include static(inputgroup);
    @include static(inputgroup-addon);
}

